//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FSMStateComponent fSMState { get { return (FSMStateComponent)GetComponent(GameComponentsLookup.FSMState); } }
    public bool hasFSMState { get { return HasComponent(GameComponentsLookup.FSMState); } }

    public void AddFSMState(GAMESTATE newCurrent_state, GAMESTATE newPrevious_state) {
        var index = GameComponentsLookup.FSMState;
        var component = CreateComponent<FSMStateComponent>(index);
        component.current_state = newCurrent_state;
        component.previous_state = newPrevious_state;
        AddComponent(index, component);
    }

    public void ReplaceFSMState(GAMESTATE newCurrent_state, GAMESTATE newPrevious_state) {
        var index = GameComponentsLookup.FSMState;
        var component = CreateComponent<FSMStateComponent>(index);
        component.current_state = newCurrent_state;
        component.previous_state = newPrevious_state;
        ReplaceComponent(index, component);
    }

    public void RemoveFSMState() {
        RemoveComponent(GameComponentsLookup.FSMState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFSMState;

    public static Entitas.IMatcher<GameEntity> FSMState {
        get {
            if (_matcherFSMState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FSMState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFSMState = matcher;
            }

            return _matcherFSMState;
        }
    }
}
