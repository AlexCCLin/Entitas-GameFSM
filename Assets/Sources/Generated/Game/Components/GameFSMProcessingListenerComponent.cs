//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FSMProcessingListenerComponent fSMProcessingListener { get { return (FSMProcessingListenerComponent)GetComponent(GameComponentsLookup.FSMProcessingListener); } }
    public bool hasFSMProcessingListener { get { return HasComponent(GameComponentsLookup.FSMProcessingListener); } }

    public void AddFSMProcessingListener(System.Collections.Generic.List<IFSMProcessingListener> newValue) {
        var index = GameComponentsLookup.FSMProcessingListener;
        var component = CreateComponent<FSMProcessingListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFSMProcessingListener(System.Collections.Generic.List<IFSMProcessingListener> newValue) {
        var index = GameComponentsLookup.FSMProcessingListener;
        var component = CreateComponent<FSMProcessingListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFSMProcessingListener() {
        RemoveComponent(GameComponentsLookup.FSMProcessingListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFSMProcessingListener;

    public static Entitas.IMatcher<GameEntity> FSMProcessingListener {
        get {
            if (_matcherFSMProcessingListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FSMProcessingListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFSMProcessingListener = matcher;
            }

            return _matcherFSMProcessingListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddFSMProcessingListener(IFSMProcessingListener value) {
        var listeners = hasFSMProcessingListener
            ? fSMProcessingListener.value
            : new System.Collections.Generic.List<IFSMProcessingListener>();
        listeners.Add(value);
        ReplaceFSMProcessingListener(listeners);
    }

    public void RemoveFSMProcessingListener(IFSMProcessingListener value, bool removeComponentWhenEmpty = true) {
        var listeners = fSMProcessingListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveFSMProcessingListener();
        } else {
            ReplaceFSMProcessingListener(listeners);
        }
    }
}
