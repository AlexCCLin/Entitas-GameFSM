//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FSMSwitchComponent fSMSwitch { get { return (FSMSwitchComponent)GetComponent(GameComponentsLookup.FSMSwitch); } }
    public bool hasFSMSwitch { get { return HasComponent(GameComponentsLookup.FSMSwitch); } }

    public void AddFSMSwitch(bool newStack, GAMESTATE newFrom_state, GAMESTATE newTo_state) {
        var index = GameComponentsLookup.FSMSwitch;
        var component = CreateComponent<FSMSwitchComponent>(index);
        component.stack = newStack;
        component.from_state = newFrom_state;
        component.to_state = newTo_state;
        AddComponent(index, component);
    }

    public void ReplaceFSMSwitch(bool newStack, GAMESTATE newFrom_state, GAMESTATE newTo_state) {
        var index = GameComponentsLookup.FSMSwitch;
        var component = CreateComponent<FSMSwitchComponent>(index);
        component.stack = newStack;
        component.from_state = newFrom_state;
        component.to_state = newTo_state;
        ReplaceComponent(index, component);
    }

    public void RemoveFSMSwitch() {
        RemoveComponent(GameComponentsLookup.FSMSwitch);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFSMSwitch;

    public static Entitas.IMatcher<GameEntity> FSMSwitch {
        get {
            if (_matcherFSMSwitch == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FSMSwitch);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFSMSwitch = matcher;
            }

            return _matcherFSMSwitch;
        }
    }
}
